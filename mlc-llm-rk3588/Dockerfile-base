FROM scratch AS git-libmali
ADD https://github.com/JeffyCN/mirrors.git#libmali /

# --------------------------------------------------------------------------- #

FROM scratch AS git-mlc-llm
ADD https://github.com/mlc-ai/mlc-llm.git /

# --------------------------------------------------------------------------- #

FROM scratch as libmali-driver
COPY --from=git-libmali /lib/aarch64-linux-gnu/libmali-valhall-g610-*.so /

# --------------------------------------------------------------------------- #

FROM scratch AS libmali-firmware
COPY --from=git-libmali /firmware/g610/mali_csffw.bin /

# --------------------------------------------------------------------------- #

FROM alpine AS fetch
RUN apk add --no-cache \
    git \
    git-lfs \
    ;

FROM scratch AS git-binary-mlc-llm-libs
ADD https://github.com/mlc-ai/binary-mlc-llm-libs.git /


# --------------------------------------------------------------------------- #

FROM debian:bookworm AS opencl

# based on https://mlc.ai/mlc-llm/docs/install/gpu.html#orange-pi-5-rk3588-based-sbc
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        mesa-opencl-icd \
        ocl-icd-opencl-dev \
        libxcb-dri2-0 \
        libxcb-dri3-0 \
        libwayland-client0 \
        libwayland-server0 \
        libx11-xcb1 \
        clinfo \
        python3 \
        python3-pip \
    ;

RUN mkdir -p /etc/OpenCL/vendors \
    && echo "/usr/lib/libmali-valhall-g610-g6p0-x11-wayland-gbm.so" | tee /etc/OpenCL/vendors/mali.icd \
    ;

COPY --from=libmali-firmware / /lib/firmware/
COPY --from=libmali-driver / /usr/lib/
RUN ldconfig

CMD ["clinfo"]

# --------------------------------------------------------------------------- #

FROM debian:bookworm AS build

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        python3 \
    ;

# install rust
ENV PATH="/root/.cargo/bin:${PATH}"
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y

COPY --from=git-mlc-llm / /mlc-llm
COPY ./mlc-llm-rk3588/config.cmake /mlc-llm/build/

# based on https://blog.mlc.ai/2023/08/09/GPU-Accelerated-LLM-on-Orange-Pi
RUN cd /mlc-llm/build \
    && cmake .. \
    && cmake --build . --parallel $(nproc) \
    && cmake --install . --prefix /out \
    ;

# --------------------------------------------------------------------------- #

FROM opencl

RUN pip3 install numpy torch transformers scipy timm \
    gradio fastapi uvicorn shortuuid \
    --break-system-packages

RUN mkdir -p /mlc-llm/python/
COPY --from=build /out/bin/ /out/lib/ /mlc-llm/build/
COPY --from=git-mlc-llm /3rdparty/tvm/python/tvm/ /mlc-llm/python/tvm/
COPY --from=git-mlc-llm /python/mlc_chat/ /mlc-llm/python/mlc_chat/
COPY --from=git-mlc-llm /mlc_llm /mlc-llm/python/mlc_llm/

ENV LD_LIBRARY_PATH=/mlc-llm/build/
ENV PYTHONPATH=/mlc-llm/python/
WORKDIR /mlc-llm
